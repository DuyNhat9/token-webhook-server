FROM node:20-alpine

WORKDIR /app

# Install Chromium and dependencies in one layer
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    udev \
    bash \
    dbus \
    dbus-x11 \
    ttf-dejavu \
    fontconfig \
    dumb-init \
    xvfb \
    mesa-dri-gallium \
    mesa-gl \
    mesa-gles \
    libx11 \
    libxcomposite \
    libxdamage \
    libxext \
    libxfixes \
    libxrandr \
    libxrender \
    libxtst \
    alsa-lib \
    cairo \
    cups-libs \
    dbus-glib \
    gdk-pixbuf \
    glib \
    gtk+3.0 \
    libdrm \
    libxcb \
    libxkbcommon \
    pango \
    libgcc \
    libstdc++

# Set Puppeteer to use system Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Set environment variables for containerized environment
ENV CONTAINERIZED=1
ENV CHROME_BIN=/usr/bin/chromium-browser
ENV DISPLAY=:99
ENV DBUS_SESSION_BUS_ADDRESS=/dev/null
ENV XDG_RUNTIME_DIR=/tmp
ENV LIBGL_ALWAYS_SOFTWARE=1
ENV CHROME_DEVEL_SANDBOX=/usr/lib/chromium/chrome-sandbox

EXPOSE 3000

# Use dumb-init as entrypoint to handle zombie processes
ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD ["node", "railway-token-server.js"]
